/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import entity.Term;
import entity.UserData;
import entity.WordData;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import server.game.ServerGameStub;

/**
 *
 * @author Edoardo
 */
public class ResultWin extends javax.swing.JDialog {

    ServerGameStub gameStub;
    ClientGameImpl clientGame;
    DefaultListModel wordListModel;
    DefaultTableModel scoreTableModel;
    DefaultTableModel resultTableModel;
    int sessionNum = 0;
    String gameName = "";
    Map<String, Integer> storePointPlayer;
    Map<String, List<WordData>> wordCheckedFound;
    UserData loggedUser;

    /**
     * Creates new form ResultWin
     */
    public ResultWin(java.awt.Dialog parent, boolean modal, String gameName, UserData parLoggedUser) {
        super(parent, modal);
        storePointPlayer = new HashMap<>();
        wordCheckedFound = new HashMap<>();
        wordListModel = new DefaultListModel<String>();
        scoreTableModel = GuiUtility.createCustomTableModel(2);
        resultTableModel = GuiUtility.createCustomTableModel(3);
        initComponents();
        initScoreTable();
        initResultTable();
        this.gameName = gameName;
        this.loggedUser = parLoggedUser;
        this.jLabelGameName_result.setText("Partita: " + this.gameName);
        this.btn_result_pass.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanelLeft = new javax.swing.JPanel();
        btn_game_leave_result = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableScore_result = new javax.swing.JTable();
        jLabelGameScore = new javax.swing.JLabel();
        jLabelGameSession_result = new javax.swing.JLabel();
        jLabelGameName_result = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelGameTime = new javax.swing.JLabel();
        btn_result_verifyWord = new javax.swing.JButton();
        jLabel_timerValue_result = new javax.swing.JLabel();
        btn_result_pass = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_result = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanelLeft.setBackground(new java.awt.Color(176, 157, 189));

        btn_game_leave_result.setBackground(new java.awt.Color(232, 17, 35));
        btn_game_leave_result.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_game_leave_result.setForeground(new java.awt.Color(255, 255, 255));
        btn_game_leave_result.setText("ABBANDONA");
        btn_game_leave_result.setBorder(null);
        btn_game_leave_result.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_game_leave_resultActionPerformed(evt);
            }
        });

        jTableScore_result.setModel(scoreTableModel);
        jScrollPane2.setViewportView(jTableScore_result);

        jLabelGameScore.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabelGameScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGameScore.setText("Giocatori e Punteggi");

        jLabelGameSession_result.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabelGameSession_result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGameSession_result.setText("Sessione Corrente: #1");

        jLabelGameName_result.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabelGameName_result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGameName_result.setText("Partita: sampleGame");

        javax.swing.GroupLayout jPanelLeftLayout = new javax.swing.GroupLayout(jPanelLeft);
        jPanelLeft.setLayout(jPanelLeftLayout);
        jPanelLeftLayout.setHorizontalGroup(
            jPanelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLeftLayout.createSequentialGroup()
                .addGroup(jPanelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLeftLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btn_game_leave_result, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addGroup(jPanelLeftLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jLabelGameName_result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelGameSession_result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelGameScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelLeftLayout.setVerticalGroup(
            jPanelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLeftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelGameName_result, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabelGameSession_result, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelGameScore, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_game_leave_result, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jSeparator7.setForeground(new java.awt.Color(79, 36, 107));
        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(79, 36, 107), 60));
        jSeparator7.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jSeparator7.setPreferredSize(new java.awt.Dimension(50, 20));

        jPanel3.setBackground(new java.awt.Color(137, 109, 156));

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Il Paroliere");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabelGameTime.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabelGameTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelGameTime.setText("Tempo Rimanente:");

        btn_result_verifyWord.setBackground(new java.awt.Color(53, 184, 53));
        btn_result_verifyWord.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_result_verifyWord.setForeground(new java.awt.Color(255, 255, 255));
        btn_result_verifyWord.setText("Verifica Parola");
        btn_result_verifyWord.setBorder(null);
        btn_result_verifyWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_result_verifyWordActionPerformed(evt);
            }
        });

        jLabel_timerValue_result.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel_timerValue_result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_timerValue_result.setText("30");

        btn_result_pass.setBackground(new java.awt.Color(232, 17, 35));
        btn_result_pass.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btn_result_pass.setForeground(new java.awt.Color(255, 255, 255));
        btn_result_pass.setText("Passa Turno");
        btn_result_pass.setBorder(null);
        btn_result_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_result_passActionPerformed(evt);
            }
        });

        jTable_result.setModel(resultTableModel);
        jTable_result.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_resultMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_result);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanelLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabelGameTime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel_timerValue_result, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_result_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_result_verifyWord, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_result_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_result_verifyWord, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelGameTime, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_timerValue_result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initScoreTable() {
        //TABLE settings
        DefaultTableCellRenderer headerBgRender = new DefaultTableCellRenderer();
        headerBgRender.setBackground(Color.decode("#FFFFFF"));
        headerBgRender.setForeground(Color.decode("#FFFFFF"));
        DefaultTableCellRenderer rightAlignmentRender = new DefaultTableCellRenderer();
        rightAlignmentRender.setHorizontalAlignment(JLabel.RIGHT);

        this.jTableScore_result.getTableHeader().getColumnModel().getColumn(0).setHeaderRenderer(headerBgRender);
        this.jTableScore_result.getTableHeader().getColumnModel().getColumn(1).setHeaderRenderer(headerBgRender);
        this.jTableScore_result.getColumnModel().getColumn(1).setCellRenderer(rightAlignmentRender);
        this.jTableScore_result.getColumnModel().getColumn(0).setPreferredWidth(350);
        this.jTableScore_result.getColumnModel().getColumn(1).setPreferredWidth(50);
        this.jScrollPane2.getViewport().setBackground(Color.white);
    }

    private void initResultTable() {
        //TABLE settings
        DefaultTableCellRenderer headerBgRender = new DefaultTableCellRenderer();
        headerBgRender.setBackground(Color.decode("#FFFFFF"));

        DefaultTableCellRenderer centerAlignmentRender = new DefaultTableCellRenderer();
        centerAlignmentRender.setHorizontalAlignment(JLabel.CENTER);

        this.jTable_result.getTableHeader().getColumnModel().getColumn(0).setHeaderRenderer(headerBgRender);
        this.jTable_result.getTableHeader().getColumnModel().getColumn(1).setHeaderRenderer(headerBgRender);
        //this.jTable_result.getColumnModel().getColumn(2).setCellRenderer(centerAlignmentRender);
        this.jScrollPane1.getViewport().setBackground(Color.white);
    }

    public void setSessionNum(int parSession) {
        this.sessionNum = parSession;
        updateSessionNum();
    }

    public synchronized void setClientGameStub(ClientGameImpl clientGameImpl) {
        this.clientGame = clientGameImpl;
    }

    public synchronized void setServerGameStub(ServerGameStub serverGameStub) {
        this.gameStub = serverGameStub;
    }

    private void updateSessionNum() {
        this.jLabelGameSession_result.setText("Sessione Corrente: #" + String.valueOf(sessionNum));
    }

    public void updateTimer(int value) {
        this.jLabel_timerValue_result.setText(value + "");
    }

    //UTILITY
    public void fillScoreTable() {
        Object rowData[] = new Object[2];
        GuiUtility.clearTable(scoreTableModel);
        this.storePointPlayer = this.clientGame.getStorePointPlayer();
        if (!this.storePointPlayer.isEmpty()) {
            for (Map.Entry<String, Integer> tmp : storePointPlayer.entrySet()) {
                if (tmp != null) {
                    rowData[0] = tmp.getKey();
                    rowData[1] = String.valueOf(tmp.getValue());
                    scoreTableModel.addRow(rowData);
                }
            }
        }
    }

    public void fillResultTable() {
        Object rowData[] = new Object[3];
        GuiUtility.clearTable(resultTableModel);

        this.wordCheckedFound = this.clientGame.getWordCheckedFound();

        if ((this.wordCheckedFound != null) && (!this.wordCheckedFound.isEmpty())) {

            for (Map.Entry<String, List<WordData>> mapEntry : wordCheckedFound.entrySet()) {
                if (mapEntry != null) {
                    for (WordData listEntry : mapEntry.getValue()) {
                        rowData[0] = mapEntry.getKey() + " ";
                        rowData[1] = listEntry.getWord() + " ";
                        rowData[2] = listEntry.getRealPoints() + " ";
                        resultTableModel.addRow(rowData);
                    }
                }
            }
        }
    }


    private void btn_result_verifyWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_result_verifyWordActionPerformed

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                final Term def;
                int rowIndex = jTable_result.getSelectedRow();
                if (rowIndex == -1) {
                    showMessageDialog(null, "Selezionare una riga!");
                    return;
                }
                try {
                    def = gameStub.requestWordDef(String.valueOf(resultTableModel.getValueAt(rowIndex, 0)), String.valueOf(resultTableModel.getValueAt(rowIndex, 1)));
                    if (def == null) {
                        showMessageDialog(null, "Definizione non trovata");
                    } else {
                        showMessageDialog(null, def.toString());
                    }
                } catch (RemoteException ex) {
                    Logger.getLogger(ResultWin.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

    }//GEN-LAST:event_btn_result_verifyWordActionPerformed

    private void jTable_resultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_resultMouseClicked
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                if (evt.getClickCount() == 2) {
                    int row = jTable_result.getSelectedRow();
                    if ((wordCheckedFound != null) && (!wordCheckedFound.isEmpty())) {

                        for (Map.Entry<String, List<WordData>> mapEntry : wordCheckedFound.entrySet()) {
                            if (mapEntry != null) {
                                for (WordData listEntry : mapEntry.getValue()) {
                                    String checkval = jTable_result.getValueAt(row, 1) + "";
                                    checkval = checkval.trim();

                                    if (listEntry.getWord().equals(checkval)) {
                                        String minimunLetter = "No";
                                        String isDuplicate = "No";
                                        String inDictionary = "No";
                                        String inGrid = "No";
                                        if (listEntry.minimunLetter()) {
                                            minimunLetter = "Si";
                                        }
                                        if (listEntry.isDuplicate()) {
                                            isDuplicate = "Si";
                                        }
                                        if (listEntry.inDictionary()) {
                                            inDictionary = "Si";
                                        }
                                        if (listEntry.inGrid()) {
                                            inGrid = "Si";
                                        }
                                        
                                        showMessageDialog(null, "Duplicata: " + isDuplicate + "\nLunghezza Sufficente: " + minimunLetter + "\nNel dizionario: " + inDictionary + "\nNella Griglia: " + inGrid);
                                        return;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        });
    }//GEN-LAST:event_jTable_resultMouseClicked

    private void btn_result_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_result_passActionPerformed
        try {
            this.btn_result_pass.setEnabled(false);
            gameStub.ready();
        } catch (RemoteException ex) {
            Logger.getLogger(ResultWin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_result_passActionPerformed

    private void btn_game_leave_resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_game_leave_resultActionPerformed
        try {
            gameStub.leaveGame(this.loggedUser.getNickname());
        } catch (RemoteException ex) {
            Logger.getLogger(ResultWin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_game_leave_resultActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ResultWin dialog = new ResultWin(new javax.swing.JDialog(), true, "", null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_game_leave_result;
    private javax.swing.JButton btn_result_pass;
    private javax.swing.JButton btn_result_verifyWord;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelGameName_result;
    private javax.swing.JLabel jLabelGameScore;
    private javax.swing.JLabel jLabelGameSession_result;
    private javax.swing.JLabel jLabelGameTime;
    private javax.swing.JLabel jLabel_timerValue_result;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTable jTableScore_result;
    private javax.swing.JTable jTable_result;
    // End of variables declaration//GEN-END:variables
}
